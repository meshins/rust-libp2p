# This workflow _produces_ a cache which is used to speed up pull request builds.

name: Cache factory

on:
  push:
    branches:
      - master # Cache is only created on master branch.

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  make_cache:
    runs-on: ubuntu-latest
    steps:
      - name: Install Protoc
        uses: arduino/setup-protoc@64c0c85d18e984422218383b81c52f8b077404d3 # v1.1.2

      - uses: actions/checkout@v3

      - id: find-rust-versions
        run: |
          RUST_VERSIONS=$(cargo metadata --format-version=1 --no-deps | jq -c '.packages | map(.rust_version) | unique | del(..|nulls)')
          echo "versions=${RUST_VERSIONS}" >> $GITHUB_OUTPUT

      - name: Install Rust versions
        run: |
           echo '${{ steps.find-rust-versions.outputs.versions }}' | jq '.[]' | xargs rustup install
           rustup update stable

      - uses: martijnhols/actions-cache/restore@v3
        with:
          path: |
            ~/.cargo
            ./target
          key: rust-master-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            rust-master-${{ hashFiles('**/Cargo.toml') }}
            rust-master-

      - name: Compile workspace with stable Rust
        run: cargo +stable test --all-features --all-targets --workspace --no-run

      - name: Compile each crate on its MSRV with all features
        run: |
          cargo metadata --format-version=1 --no-deps | \
          jq -r '.packages[] | select(.rust_version != null) | "+\(.rust_version) build --all-features --package \(.name)"' |
          xargs --verbose -L 1 cargo

      - name: Render docs
        run: cargo +stable doc --all-features --workspace

      - name: Install tools
        run: |
          cargo install cargo-semver-checks --locked

      - uses: martijnhols/actions-cache/save@v3
        with:
          path: |
            ~/.cargo
            ./target
          key: rust-master-${{ hashFiles('**/Cargo.toml') }}
